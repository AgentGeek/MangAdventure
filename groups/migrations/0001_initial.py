# Generated by Django 2.1 on 2018-09-07 13:40

import MangAdventure.models
import MangAdventure.utils.storage
import MangAdventure.utils.uploaders
import MangAdventure.utils.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.SmallIntegerField(auto_created=True, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text="The group's name.", max_length=100)),
                ('website', models.URLField(help_text="The group's website.")),
                ('email', models.EmailField(blank=True, help_text="The group's E-mail address.", max_length=254)),
                ('discord', MangAdventure.models.DiscordURLField(blank=True, help_text="The group's Discord link.")),
                ('twitter', MangAdventure.models.TwitterField(blank=True, help_text="The group's Twitter username.", max_length=15)),
                ('description', models.TextField(blank=True, help_text='A description for the group.')),
                ('logo', models.ImageField(blank=True, help_text="Upload the group's logo. Its size must not exceed 2 MBs.", storage=MangAdventure.utils.storage.OverwriteStorage(), upload_to=MangAdventure.utils.uploaders.group_logo_uploader, validators=[MangAdventure.utils.validators.FileSizeValidator(max_mb=2)])),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="The member's name.", max_length=100)),
                ('twitter', MangAdventure.models.TwitterField(blank=True, help_text="The member's Twitter username.", max_length=15)),
                ('discord', MangAdventure.models.DiscordNameField(blank=True, help_text="The member's Discord username and discriminator.", max_length=37)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('LD', 'Leader'), ('TL', 'Translator'), ('PR', 'Proofreader'), ('CL', 'Cleaner'), ('RD', 'Redrawer'), ('TS', 'Typesetter'), ('RP', 'Raw Provider'), ('QC', 'Quality Checker')], max_length=2)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='groups.Group')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='groups.Member')),
            ],
            options={
                'verbose_name': 'Role',
            },
        ),
        migrations.AlterUniqueTogether(
            name='role',
            unique_together={('member', 'role', 'group')},
        ),
    ]
